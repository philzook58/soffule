.decl edge(n: symbol, m: symbol)
edge("a", "b"). /* facts of edge */
edge("b", "c").
edge("c", "b").
edge("c", "d").
.decl reachable (n: symbol, m: symbol)
.output reachable // output relation reachable
reachable(x, y):- edge(x, y). // base rule
reachable(x, z):- edge(x, y), reachable(y, z). // inductive rule
.decl scc (n : symbol , m: symbol)
.output scc

scc(n,m) :- reachable(n,m), reachable(m,n).

.decl cyclic (n : symbol)
.output cyclic
cyclic(n) :- scc(n,M).

